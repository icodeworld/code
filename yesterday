public class MonsterTestDrive {
	public static void mian(String [] args){
		Monster [] ma = new Monster [3];
		ma[0]=new Vampire();
		ma[1]=new Dragon();
		ma[2]=new Monster();
		for(int x=0;x<3;x++){
			ma[x].frighten(x);
		}
	} 
} 


class Monster {
	boolean frighten(int x) {
		System.out.println("arrrgh");
		return false;
	}
}

class Vampire extends Monster {
	boolean scare (int x){
		System.out.println("a bite?");
		return true;
	}
}

class Dragon extends Monster{
	boolean frighten(int degree){
		System.out.println("breath fire");
		return true;
	}
}


   I have a problem
class A {
	int ivar=7;
	void m1() {
		System.out.print("A's m1,");
	}
	void m2() {
		System.out.print("A's m2,");
	}
	void m3() {
		System.out.print("A's m3,");
	}
}
class B extends A {
	void m1() {
		System.out.print("B's m1,");
	}
}
class C extends B {
	void m3() {
		System.out.print("C's m3,"+(ivar+6));
	}
}
public class Mixed2{
	public static void main(String[] args){
		A a=new A();
		B b=new B();
		C c=new C();
		A a2=new C();
//		a2.m1();
//		a2.m2();
//		a2.m3();
	}} 
	
	
	
	
	       the use of polymorphism
public class MyAnimalList {
	private Animal[] animals =new Animal[5];
	private int nextIndex=0;
	public void add(Animal a){
		if(nextIndex<animals.length){
			animals[nextIndex]=a;
			System.out.println("Animal added at"+nextIndex);
			nextIndex++;
		}
	}
}
public class AnimalTestDrive {
	public static void main(String[] args){
		MyAnimalList list =new MyAnimalList();
		Dog a=new Dog();
		Cat c=new Cat();
		list.add(a);
		list.add(c); 
	}
}
